version: '3.9'

services:
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - DEBUG=True
      - DATABASE_HOST=db
    volumes:
      - .:/code
      - static_volume:/code/static
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env

  db:
    image: postgres:16.0
    restart: on-failure
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - '5432'
    env_file:
      - ./.env
    healthcheck:
      test: ['CMD-SHELL', '-c', 'pg_isready -U $DBUSER']
      interval: 30s
      retries: 5
      timeout: 10s

  redis:
    image: redis:latest
    restart: on-failure

  app:
    build: .
    tty: true
    ports:
      - '8000:8000'
    environment:
      - POETRY_VIRTUALENVS_CREATE=false
    command: pip run sh -c 'python manage.py migrate && python manage.py runserver 0.0.0.0:8000'
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app

    celery:
      build: .
      tty: true
      command: celery -A config worker -l INFO
      restart: on-failure
      volumes:
        - .:/app
      depends_on:
        - redis
        - db
        - app
      env_file:
        - .env

    celery-beat:
      build: .
      tty: true
      command: celery -A config beat -l INFO
      restart: on-failure
      volumes:
        - .:/app
      depends_on:
        - redis
        - db
        - app
      env_file:
        - .env

volumes:
  postgres_data:
  static_volume:
